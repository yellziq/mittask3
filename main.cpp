#include<iostream>
#include <cstdlib>
#include <cmath>
using namespace std;

// Структура для хранения элемента стека
struct stack {
    int inf;        // Значение элемента
    stack* next;    // Указатель на следующий элемент
};

// Функция добавления элемента в стек
void push(stack*& h, int x) {
    // Создаем новый элемент
    stack* r = new stack;
    r->inf = x;
    r->next = h;

    // Устанавливаем новый элемент в качестве вершины стека
    h = r;
}

// Функция удаления элемента из стека
int pop(stack*& h) {
    // Сохраняем значение удаляемого элемента
    int i = h->inf;

    // Удаляем вершину стека
    stack* r = h;
    h = h->next;

    // Освобождаем память удаленного элемента
    delete r;

    // Возвращаем значение удаленного элемента
    return i;
}

// Функция переворота стека
void reverse(stack*& h) {
    // Создаем новый стек
    stack* head1 = NULL;

    // Перемещаем все элементы из исходного стека в новый стек
    while (h)
        push(head1, pop(h));

    // Устанавливаем новый стек в качестве исходного
    h = head1;
}

// Функция проверки числа на простоту
bool prost(int n) {
    // Числа 1 и меньше не являются простыми
    if (n <= 1) return false;

    // Проверяем делимость числа на все числа от 2 до квадратного корня из n
    for (int i = 2; i <= sqrt(n); i++)
        if (!(n % i)) return false;

    // Если ни один делитель не найден, то число простое
    return true;
}

// Функция добавления нуля после всех простых чисел в стеке
stack* result(stack*& h) {
    // Создаем новый стек
    stack* temp = NULL;

    // Перемещаем все элементы из исходного стека в новый стек, добавляя нуль после каждого простого числа
    int x;
    while (h) {
        x = pop(h);
        push(temp, x);
        if (prost(x))
            push(temp, 0);
    }

    // Возвращаем новый стек
    return (temp);
}

int main() {
    // Создаем стек
    stack* h = NULL;

    // Считываем количество элементов в стеке
    int n, x;
    cout << "Количество элеметов в заданном стеке n = "; cin >> n;

    // Очищаем экран
    system("clear");

    // Считываем элементы стека
    cout << "Введите элементы стека:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> x;
        push(h, x);
    }

    cout << endl;

    // Переворачиваем стек
    reverse(h);

    // Добавляем нули после всех простых чисел в стеке
    h = result(h);

    // Выводим результат
    cout << "Результат: " << endl;
    while (h) {
        cout << pop(h) << " ";
    }

    return 0;
}
